[
{
  "name":"[B"
},
{
  "name":"[C"
},
{
  "name":"[D"
},
{
  "name":"[F"
},
{
  "name":"[I"
},
{
  "name":"[J"
},
{
  "name":"[Lcom.fasterxml.jackson.databind.ser.Serializers;"
},
{
  "name":"[Ljava.lang.String;"
},
{
  "name":"[Ljavax.management.openmbean.CompositeData;"
},
{
  "name":"[Lorg.apache.logging.log4j.core.Appender;"
},
{
  "name":"[Lorg.apache.logging.log4j.core.config.AppenderRef;"
},
{
  "name":"[Lorg.apache.logging.log4j.core.config.LoggerConfig;"
},
{
  "name":"[Lorg.apache.logging.log4j.core.config.Property;"
},
{
  "name":"[S"
},
{
  "name":"[Z"
},
{
  "name":"com.cefriel.MyRouteBuilder",
  "allDeclaredFields":true,
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.cefriel.component.MaptTemplateComponent",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.cefriel.component.MaptTemplateEndpoint",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"setFormat","parameterTypes":["java.lang.String"] }, {"name":"setTemplate","parameterTypes":["com.cefriel.util.ChimeraResourceBean"] }]
},
{
  "name":"com.cefriel.template.io.Reader",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.cefriel.template.io.csv.CSVReader",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getDataframe","parameterTypes":[] }]
},
{
  "name":"com.cefriel.template.io.rdf.RDFReader",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getDataframe","parameterTypes":["java.lang.String"] }, {"name":"setQueryHeader","parameterTypes":["java.lang.String"] }]
},
{
  "name":"com.fasterxml.jackson.core.JsonParser"
},
{
  "name":"com.fasterxml.jackson.databind.JsonNode"
},
{
  "name":"com.fasterxml.jackson.databind.ObjectMapper"
},
{
  "name":"com.fasterxml.jackson.databind.ext.Java7SupportImpl",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.fasterxml.jackson.dataformat.yaml.YAMLFactory"
},
{
  "name":"com.ibm.lang.management.OperatingSystemMXBean"
},
{
  "name":"com.sun.management.GarbageCollectorMXBean",
  "queryAllPublicMethods":true
},
{
  "name":"com.sun.management.GcInfo",
  "queryAllPublicMethods":true
},
{
  "name":"com.sun.management.HotSpotDiagnosticMXBean",
  "queryAllPublicMethods":true
},
{
  "name":"com.sun.management.OperatingSystemMXBean",
  "methods":[{"name":"getCpuLoad","parameterTypes":[] }, {"name":"getProcessCpuLoad","parameterTypes":[] }]
},
{
  "name":"com.sun.management.ThreadMXBean",
  "queryAllPublicMethods":true
},
{
  "name":"com.sun.management.UnixOperatingSystemMXBean",
  "queryAllPublicMethods":true,
  "methods":[{"name":"getMaxFileDescriptorCount","parameterTypes":[] }, {"name":"getOpenFileDescriptorCount","parameterTypes":[] }]
},
{
  "name":"com.sun.management.VMOption",
  "queryAllPublicMethods":true
},
{
  "name":"com.sun.management.internal.GarbageCollectorExtImpl",
  "queryAllPublicConstructors":true
},
{
  "name":"com.sun.management.internal.HotSpotDiagnostic",
  "queryAllPublicConstructors":true
},
{
  "name":"com.sun.management.internal.HotSpotThreadImpl",
  "queryAllPublicConstructors":true
},
{
  "name":"com.sun.management.internal.OperatingSystemImpl",
  "queryAllPublicConstructors":true
},
{
  "name":"io.micrometer.core.instrument.binder.jvm.JvmInfoMetrics",
  "allDeclaredFields":true,
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micrometer.core.instrument.binder.system.FileDescriptorMetrics",
  "allDeclaredFields":true,
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micrometer.core.instrument.binder.system.ProcessorMetrics",
  "allDeclaredFields":true,
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micrometer.core.instrument.distribution.TimeWindowMax",
  "fields":[{"name":"rotating"}]
},
{
  "name":"io.netty.bootstrap.ServerBootstrap$1"
},
{
  "name":"io.netty.bootstrap.ServerBootstrap$ServerBootstrapAcceptor",
  "methods":[{"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }]
},
{
  "name":"io.netty.buffer.AbstractByteBufAllocator",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.netty.buffer.AbstractReferenceCountedByteBuf",
  "fields":[{"name":"refCnt"}]
},
{
  "name":"io.netty.channel.AbstractChannelHandlerContext",
  "fields":[{"name":"handlerState"}]
},
{
  "name":"io.netty.channel.ChannelDuplexHandler",
  "methods":[{"name":"bind","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","io.netty.channel.ChannelPromise"] }, {"name":"close","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, {"name":"connect","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","java.net.SocketAddress","io.netty.channel.ChannelPromise"] }, {"name":"deregister","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, {"name":"disconnect","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, {"name":"flush","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"read","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"write","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object","io.netty.channel.ChannelPromise"] }]
},
{
  "name":"io.netty.channel.ChannelHandlerAdapter",
  "methods":[{"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }]
},
{
  "name":"io.netty.channel.ChannelInboundHandlerAdapter",
  "methods":[{"name":"channelActive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, {"name":"channelReadComplete","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelRegistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelUnregistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelWritabilityChanged","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }, {"name":"userEventTriggered","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }]
},
{
  "name":"io.netty.channel.ChannelInitializer",
  "methods":[{"name":"channelRegistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }]
},
{
  "name":"io.netty.channel.ChannelOutboundBuffer",
  "fields":[{"name":"totalPendingSize"}, {"name":"unwritable"}]
},
{
  "name":"io.netty.channel.ChannelOutboundHandlerAdapter",
  "methods":[{"name":"bind","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","io.netty.channel.ChannelPromise"] }, {"name":"close","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, {"name":"connect","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","java.net.SocketAddress","io.netty.channel.ChannelPromise"] }, {"name":"deregister","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, {"name":"disconnect","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, {"name":"flush","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"read","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }]
},
{
  "name":"io.netty.channel.DefaultChannelConfig",
  "fields":[{"name":"autoRead"}, {"name":"writeBufferWaterMark"}]
},
{
  "name":"io.netty.channel.DefaultChannelPipeline",
  "fields":[{"name":"estimatorHandle"}]
},
{
  "name":"io.netty.channel.DefaultChannelPipeline$HeadContext",
  "methods":[{"name":"bind","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","io.netty.channel.ChannelPromise"] }, {"name":"channelActive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, {"name":"channelReadComplete","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelRegistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelUnregistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelWritabilityChanged","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"close","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, {"name":"connect","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","java.net.SocketAddress","io.netty.channel.ChannelPromise"] }, {"name":"deregister","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, {"name":"disconnect","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }, {"name":"flush","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"read","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"userEventTriggered","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, {"name":"write","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object","io.netty.channel.ChannelPromise"] }]
},
{
  "name":"io.netty.channel.DefaultChannelPipeline$TailContext",
  "methods":[{"name":"channelActive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, {"name":"channelReadComplete","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelRegistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelUnregistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelWritabilityChanged","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }, {"name":"userEventTriggered","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }]
},
{
  "name":"io.netty.handler.codec.ByteToMessageDecoder",
  "methods":[{"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, {"name":"channelReadComplete","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }]
},
{
  "name":"io.netty.handler.codec.haproxy.HAProxyMessageDecoder"
},
{
  "name":"io.netty.handler.codec.http.HttpObjectDecoder",
  "methods":[{"name":"userEventTriggered","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }]
},
{
  "name":"io.netty.handler.codec.http.HttpObjectEncoder",
  "methods":[{"name":"write","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object","io.netty.channel.ChannelPromise"] }]
},
{
  "name":"io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler",
  "methods":[{"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, {"name":"write","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object","io.netty.channel.ChannelPromise"] }]
},
{
  "name":"io.netty.util.DefaultAttributeMap",
  "fields":[{"name":"attributes"}]
},
{
  "name":"io.netty.util.Recycler$DefaultHandle",
  "fields":[{"name":"state"}]
},
{
  "name":"io.netty.util.ReferenceCountUtil",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.netty.util.concurrent.DefaultPromise",
  "fields":[{"name":"result"}]
},
{
  "name":"io.netty.util.concurrent.SingleThreadEventExecutor",
  "fields":[{"name":"state"}, {"name":"threadProperties"}]
},
{
  "name":"io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueColdProducerFields",
  "fields":[{"name":"producerLimit"}]
},
{
  "name":"io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueConsumerFields",
  "fields":[{"name":"consumerIndex"}]
},
{
  "name":"io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueProducerFields",
  "fields":[{"name":"producerIndex"}]
},
{
  "name":"io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueConsumerIndexField",
  "fields":[{"name":"consumerIndex"}]
},
{
  "name":"io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueProducerIndexField",
  "fields":[{"name":"producerIndex"}]
},
{
  "name":"io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueProducerLimitField",
  "fields":[{"name":"producerLimit"}]
},
{
  "name":"io.vertx.core.eventbus.impl.EventBusImpl",
  "fields":[{"name":"inboundInterceptors"}, {"name":"outboundInterceptors"}]
},
{
  "name":"io.vertx.core.http.impl.Http1xOrH2CHandler",
  "methods":[{"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }]
},
{
  "name":"io.vertx.core.http.impl.Http1xUpgradeToH2CHandler",
  "methods":[{"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, {"name":"userEventTriggered","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }]
},
{
  "name":"io.vertx.core.http.impl.HttpServerWorker$1",
  "methods":[{"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }, {"name":"userEventTriggered","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }]
},
{
  "name":"io.vertx.core.http.impl.VertxHttpRequestDecoder"
},
{
  "name":"io.vertx.core.http.impl.VertxHttpResponseEncoder"
},
{
  "name":"io.vertx.core.logging.SLF4JLogDelegateFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.vertx.core.net.impl.ServerChannelLoadBalancer"
},
{
  "name":"io.vertx.core.net.impl.VertxHandler",
  "methods":[{"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, {"name":"channelReadComplete","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelWritabilityChanged","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"close","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }, {"name":"userEventTriggered","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }]
},
{
  "name":"io.vertx.ext.web.impl.RoutingContextImplBase",
  "fields":[{"name":"currentRouteNextFailureHandlerIndex"}, {"name":"currentRouteNextHandlerIndex"}]
},
{
  "name":"jakarta.servlet.Servlet"
},
{
  "name":"java.io.ObjectInputStream",
  "queryAllPublicMethods":true
},
{
  "name":"java.io.Serializable",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getAsString","parameterTypes":[] }]
},
{
  "name":"java.lang.Boolean",
  "fields":[{"name":"TYPE"}]
},
{
  "name":"java.lang.Byte",
  "fields":[{"name":"TYPE"}]
},
{
  "name":"java.lang.Character",
  "fields":[{"name":"TYPE"}]
},
{
  "name":"java.lang.Cloneable",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"java.lang.Comparable",
  "methods":[{"name":"getAsString","parameterTypes":[] }]
},
{
  "name":"java.lang.Deprecated",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.Double",
  "fields":[{"name":"TYPE"}]
},
{
  "name":"java.lang.Float",
  "fields":[{"name":"TYPE"}]
},
{
  "name":"java.lang.Integer",
  "fields":[{"name":"TYPE"}],
  "methods":[{"name":"getAsString","parameterTypes":[] }]
},
{
  "name":"java.lang.Long",
  "fields":[{"name":"TYPE"}]
},
{
  "name":"java.lang.Number",
  "methods":[{"name":"getAsString","parameterTypes":[] }]
},
{
  "name":"java.lang.Object",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.ProcessHandle",
  "methods":[{"name":"current","parameterTypes":[] }, {"name":"pid","parameterTypes":[] }]
},
{
  "name":"java.lang.Short",
  "fields":[{"name":"TYPE"}]
},
{
  "name":"java.lang.StackTraceElement",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.String",
  "fields":[{"name":"TYPE"}]
},
{
  "name":"java.lang.Thread",
  "fields":[{"name":"threadLocalRandomProbe"}]
},
{
  "name":"java.lang.Void",
  "fields":[{"name":"TYPE"}]
},
{
  "name":"java.lang.constant.Constable",
  "methods":[{"name":"getAsString","parameterTypes":[] }]
},
{
  "name":"java.lang.constant.ConstantDesc",
  "methods":[{"name":"getAsString","parameterTypes":[] }]
},
{
  "name":"java.lang.management.BufferPoolMXBean",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.management.ClassLoadingMXBean",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.management.CompilationMXBean",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.management.LockInfo",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.management.ManagementFactory",
  "methods":[{"name":"getRuntimeMXBean","parameterTypes":[] }]
},
{
  "name":"java.lang.management.ManagementPermission",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String"] }]
},
{
  "name":"java.lang.management.MemoryMXBean",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.management.MemoryManagerMXBean",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.management.MemoryPoolMXBean",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.management.MemoryUsage",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.management.MonitorInfo",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.management.PlatformLoggingMXBean",
  "queryAllPublicMethods":true,
  "methods":[{"name":"getLoggerLevel","parameterTypes":["java.lang.String"] }, {"name":"getLoggerNames","parameterTypes":[] }, {"name":"getParentLoggerName","parameterTypes":["java.lang.String"] }, {"name":"setLoggerLevel","parameterTypes":["java.lang.String","java.lang.String"] }]
},
{
  "name":"java.lang.management.RuntimeMXBean",
  "queryAllPublicMethods":true,
  "methods":[{"name":"getInputArguments","parameterTypes":[] }]
},
{
  "name":"java.lang.management.ThreadInfo",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.reflect.Proxy",
  "queryAllPublicMethods":true
},
{
  "name":"java.math.BigDecimal"
},
{
  "name":"java.math.BigInteger"
},
{
  "name":"java.nio.Bits",
  "methods":[{"name":"unaligned","parameterTypes":[] }]
},
{
  "name":"java.nio.Buffer",
  "fields":[{"name":"address"}]
},
{
  "name":"java.nio.ByteBuffer",
  "methods":[{"name":"alignedSlice","parameterTypes":["int"] }]
},
{
  "name":"java.nio.DirectByteBuffer",
  "methods":[{"name":"<init>","parameterTypes":["long","int"] }]
},
{
  "name":"java.nio.channels.spi.SelectorProvider",
  "methods":[{"name":"openServerSocketChannel","parameterTypes":["java.net.ProtocolFamily"] }, {"name":"openSocketChannel","parameterTypes":["java.net.ProtocolFamily"] }]
},
{
  "name":"java.security.SecureRandomParameters"
},
{
  "name":"java.util.AbstractMap",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"java.util.Date"
},
{
  "name":"java.util.HashMap",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"java.util.Map",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"java.util.PropertyPermission",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String","java.lang.String"] }]
},
{
  "name":"java.util.concurrent.ForkJoinTask",
  "fields":[{"name":"aux"}, {"name":"status"}]
},
{
  "name":"java.util.concurrent.atomic.AtomicBoolean",
  "fields":[{"name":"value"}]
},
{
  "name":"java.util.concurrent.atomic.AtomicReference",
  "fields":[{"name":"value"}]
},
{
  "name":"java.util.concurrent.atomic.Striped64",
  "fields":[{"name":"base"}, {"name":"cellsBusy"}]
},
{
  "name":"java.util.logging.LogManager",
  "methods":[{"name":"getLoggingMXBean","parameterTypes":[] }]
},
{
  "name":"java.util.logging.LoggingMXBean",
  "queryAllPublicMethods":true
},
{
  "name":"javax.management.MBeanInfo",
  "queryAllPublicMethods":true,
  "methods":[{"name":"getAttributes","parameterTypes":[] }, {"name":"getConstructors","parameterTypes":[] }, {"name":"getNotifications","parameterTypes":[] }, {"name":"getOperations","parameterTypes":[] }]
},
{
  "name":"javax.management.MBeanOperationInfo",
  "queryAllPublicMethods":true,
  "methods":[{"name":"getSignature","parameterTypes":[] }]
},
{
  "name":"javax.management.MBeanServerBuilder",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"javax.management.ObjectName"
},
{
  "name":"javax.management.StandardEmitterMBean",
  "methods":[{"name":"cacheMBeanInfo","parameterTypes":["javax.management.MBeanInfo"] }, {"name":"getCachedMBeanInfo","parameterTypes":[] }, {"name":"getMBeanInfo","parameterTypes":[] }]
},
{
  "name":"javax.management.modelmbean.ModelMBeanInfoSupport"
},
{
  "name":"javax.management.modelmbean.ModelMBeanOperationInfo"
},
{
  "name":"javax.management.modelmbean.RequiredModelMBean",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"javax.management.openmbean.CompositeData"
},
{
  "name":"javax.management.openmbean.OpenMBeanOperationInfoSupport"
},
{
  "name":"javax.management.openmbean.TabularData"
},
{
  "name":"javax.servlet.Servlet"
},
{
  "name":"jdk.internal.misc.Unsafe",
  "methods":[{"name":"getUnsafe","parameterTypes":[] }]
},
{
  "name":"jdk.management.jfr.ConfigurationInfo",
  "queryAllPublicMethods":true
},
{
  "name":"jdk.management.jfr.EventTypeInfo",
  "queryAllPublicMethods":true
},
{
  "name":"jdk.management.jfr.FlightRecorderMXBean",
  "queryAllPublicMethods":true
},
{
  "name":"jdk.management.jfr.FlightRecorderMXBeanImpl",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"cacheMBeanInfo","parameterTypes":["javax.management.MBeanInfo"] }, {"name":"getCachedMBeanInfo","parameterTypes":[] }, {"name":"getMBeanInfo","parameterTypes":[] }, {"name":"getNotificationInfo","parameterTypes":[] }]
},
{
  "name":"jdk.management.jfr.RecordingInfo",
  "queryAllPublicMethods":true
},
{
  "name":"jdk.management.jfr.SettingDescriptorInfo",
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.camel.CamelContextAware",
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.camel.Service",
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.camel.ShutdownableService",
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.camel.StatefulService",
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.camel.StaticService",
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.camel.SuspendableService",
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.camel.TimerListener",
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.camel.api.management.ManagedAttribute",
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.camel.api.management.ManagedInstance",
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.camel.api.management.ManagedOperation",
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.camel.api.management.mbean.ManagedAsyncProcessorAwaitManagerMBean",
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.camel.api.management.mbean.ManagedBeanIntrospectionMBean",
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.camel.api.management.mbean.ManagedBrowsableEndpointMBean",
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.camel.api.management.mbean.ManagedCamelContextMBean",
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.camel.api.management.mbean.ManagedCamelHealthMBean",
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.camel.api.management.mbean.ManagedComponentMBean",
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.camel.api.management.mbean.ManagedConsumerMBean",
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.camel.api.management.mbean.ManagedConvertBodyMBean",
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.camel.api.management.mbean.ManagedCounterMBean",
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.camel.api.management.mbean.ManagedEndpointMBean",
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.camel.api.management.mbean.ManagedEndpointRegistryMBean",
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.camel.api.management.mbean.ManagedExchangeFactoryManagerMBean",
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.camel.api.management.mbean.ManagedExtendedInformation",
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.camel.api.management.mbean.ManagedInflightRepositoryMBean",
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.camel.api.management.mbean.ManagedLogMBean",
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.camel.api.management.mbean.ManagedPerformanceCounterMBean",
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.camel.api.management.mbean.ManagedProcessorMBean",
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.camel.api.management.mbean.ManagedProducerMBean",
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.camel.api.management.mbean.ManagedRouteControllerMBean",
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.camel.api.management.mbean.ManagedRouteMBean",
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.camel.api.management.mbean.ManagedSchedulePollConsumerMBean",
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.camel.api.management.mbean.ManagedSendProcessorMBean",
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.camel.api.management.mbean.ManagedServiceMBean",
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.camel.api.management.mbean.ManagedStreamCachingStrategyMBean",
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.camel.api.management.mbean.ManagedSuspendableRouteMBean",
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.camel.api.management.mbean.ManagedThreadPoolMBean",
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.camel.api.management.mbean.ManagedTypeConverterRegistryMBean",
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.camel.api.management.mbean.ManagedVariableRepositoryMBean",
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.camel.attachment.AttachmentConverterLoader",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.camel.builder.BuilderSupport",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.apache.camel.builder.RouteBuilder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.apache.camel.component.file.FileComponent",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.camel.component.file.FileComponentConfigurer",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.camel.component.file.FileEndpointConfigurer",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.camel.component.file.GenericFileConverterLoader",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.camel.component.http.HttpConvertersLoader",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.camel.component.http.HttpEntityConverterLoader",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.camel.component.micrometer.MicrometerComponent",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.camel.component.micrometer.MicrometerComponentConfigurer",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.camel.component.micrometer.MicrometerConsole",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.camel.component.micrometer.MicrometerEndpointConfigurer",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.camel.component.micrometer.eventnotifier.MicrometerEventNotifierService",
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.camel.component.micrometer.json.AbstractMicrometerService",
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.camel.component.micrometer.messagehistory.MicrometerMessageHistoryMBean",
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.camel.component.micrometer.messagehistory.MicrometerMessageHistoryService",
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.camel.component.micrometer.prometheus.MicrometerPrometheus",
  "queryAllPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.camel.component.micrometer.prometheus.MicrometerPrometheusConfigurer",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.camel.component.micrometer.routepolicy.MicrometerRoutePolicyMBean",
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.camel.component.micrometer.routepolicy.MicrometerRoutePolicyService",
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.camel.component.platform.http.PlatformHttpComponent",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.camel.component.platform.http.PlatformHttpComponentConfigurer",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.camel.component.platform.http.PlatformHttpConsole",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.camel.component.platform.http.PlatformHttpEndpointConfigurer",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.camel.component.platform.http.main.DefaultMainHttpServerFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.camel.component.platform.http.vertx.VertxConverterLoader",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.camel.component.platform.http.vertx.VertxPlatformHttpEngine",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.camel.component.platform.http.vertx.VertxPlatformHttpServer",
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.camel.component.properties.PropertiesComponent",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.camel.component.stub.StubConsole",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.camel.component.vertx.common.CamelVertxCommonBulkConverterLoader",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.camel.converter.CamelBaseBulkConverterLoader",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.camel.converter.jaxp.CamelXmlJaxpBulkConverterLoader",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.camel.converter.stream.StreamCacheBulkConverterLoader",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.camel.http.common.HttpConverterLoader",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.camel.impl.CamelContextConfigurer",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.camel.impl.DefaultCamelContext",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.apache.camel.impl.ExtendedCamelContextConfigurer",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.camel.impl.console.BeanDevConsole",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.camel.impl.console.BlockedConsole",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.camel.impl.console.ConsumerDevConsole",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.camel.impl.console.ContextDevConsole",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.camel.impl.console.DebugDevConsole",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.camel.impl.console.DefaultDevConsoleRegistry",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.camel.impl.console.EndpointDevConsole",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.camel.impl.console.EventConsole",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.camel.impl.console.GarbageCollectorDevConsole",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.camel.impl.console.HealthDevConsole",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.camel.impl.console.InflightConsole",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.camel.impl.console.JavaSecurityDevConsole",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.camel.impl.console.JvmDevConsole",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.camel.impl.console.LogDevConsole",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.camel.impl.console.MemoryDevConsole",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.camel.impl.console.PropertiesDevConsole",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.camel.impl.console.ReloadDevConsole",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.camel.impl.console.RouteCircuitBreakerDevConsole",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.camel.impl.console.RouteControllerConsole",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.camel.impl.console.RouteDevConsole",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.camel.impl.console.RouteDumpDevConsole",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.camel.impl.console.SourceDevConsole",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.camel.impl.console.StartupRecorderDevConsole",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.camel.impl.console.ThreadDevConsole",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.camel.impl.console.TopDevConsole",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.camel.impl.console.TraceDevConsole",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.camel.impl.console.TypeConverterConsole",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.camel.impl.console.VariablesDevConsole",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.camel.impl.engine.AbstractCamelContext",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"setDevConsole","parameterTypes":["java.lang.Boolean"] }]
},
{
  "name":"org.apache.camel.impl.engine.DefaultManagementStrategy",
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.camel.impl.engine.DefaultReactiveExecutor",
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.camel.impl.engine.SimpleCamelContext",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.apache.camel.impl.health.ConsumersHealthCheckRepository",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.camel.impl.health.ContextHealthCheck",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.camel.impl.health.DefaultHealthCheckRegistry",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.camel.impl.health.ProducersHealthCheckRepository",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.camel.impl.health.RoutesHealthCheckRepository",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.camel.language.constant.ConstantLanguage",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.camel.language.simple.SimpleLanguage",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.camel.main.HealthConfigurationPropertiesConfigurer",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.camel.main.HttpServerConfigurationPropertiesConfigurer",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.camel.main.MainConfigurationPropertiesConfigurer",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.camel.management.JmxManagementStrategy",
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.camel.management.JmxManagementStrategyFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.camel.management.PerformanceCounter",
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.camel.management.mbean.ManagedAsyncProcessorAwaitManager",
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.camel.management.mbean.ManagedBeanIntrospection",
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.camel.management.mbean.ManagedBrowsableEndpoint",
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.camel.management.mbean.ManagedCamelContext",
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.camel.management.mbean.ManagedCamelHealth",
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.camel.management.mbean.ManagedComponent",
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.camel.management.mbean.ManagedConsumer",
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.camel.management.mbean.ManagedConvertBody",
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.camel.management.mbean.ManagedCounter",
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.camel.management.mbean.ManagedEndpoint",
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.camel.management.mbean.ManagedEndpointRegistry",
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.camel.management.mbean.ManagedEventNotifier",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"getNotificationInfo","parameterTypes":[] }]
},
{
  "name":"org.apache.camel.management.mbean.ManagedEventNotifierMBean",
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.camel.management.mbean.ManagedExchangeFactoryManager",
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.camel.management.mbean.ManagedInflightRepository",
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.camel.management.mbean.ManagedLog",
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.camel.management.mbean.ManagedPerformanceCounter",
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.camel.management.mbean.ManagedProcessor",
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.camel.management.mbean.ManagedProducer",
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.camel.management.mbean.ManagedRoute",
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.camel.management.mbean.ManagedRouteController",
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.camel.management.mbean.ManagedScheduledPollConsumer",
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.camel.management.mbean.ManagedSendProcessor",
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.camel.management.mbean.ManagedService",
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.camel.management.mbean.ManagedStreamCachingStrategy",
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.camel.management.mbean.ManagedSuspendableRoute",
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.camel.management.mbean.ManagedThreadPool",
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.camel.management.mbean.ManagedTypeConverterRegistry",
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.camel.management.mbean.ManagedVariableRepository",
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.camel.processor.DefaultInternalProcessorFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.camel.processor.DefaultProcessorFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.camel.spi.CamelMetricsService",
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.camel.spi.HasCamelContext",
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.camel.spi.IdempotentRepository",
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.camel.spi.ManagementStrategy",
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.camel.spi.ReactiveExecutor",
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.camel.support.DefaultEndpoint",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.apache.camel.support.processor.idempotent.MemoryIdempotentRepository",
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.camel.support.service.BaseService",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.camel.support.service.ServiceSupport",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.logging.log4j.core.appender.AbstractAppender$Builder",
  "allDeclaredFields":true
},
{
  "name":"org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender$Builder",
  "allDeclaredFields":true
},
{
  "name":"org.apache.logging.log4j.core.appender.AppenderSet"
},
{
  "name":"org.apache.logging.log4j.core.appender.AsyncAppender"
},
{
  "name":"org.apache.logging.log4j.core.appender.ConsoleAppender",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"newBuilder","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.appender.ConsoleAppender$Builder",
  "allDeclaredFields":true
},
{
  "name":"org.apache.logging.log4j.core.appender.CountingNoOpAppender"
},
{
  "name":"org.apache.logging.log4j.core.appender.FailoverAppender"
},
{
  "name":"org.apache.logging.log4j.core.appender.FailoversPlugin"
},
{
  "name":"org.apache.logging.log4j.core.appender.FileAppender"
},
{
  "name":"org.apache.logging.log4j.core.appender.HttpAppender"
},
{
  "name":"org.apache.logging.log4j.core.appender.MemoryMappedFileAppender"
},
{
  "name":"org.apache.logging.log4j.core.appender.NullAppender"
},
{
  "name":"org.apache.logging.log4j.core.appender.OutputStreamAppender"
},
{
  "name":"org.apache.logging.log4j.core.appender.RandomAccessFileAppender"
},
{
  "name":"org.apache.logging.log4j.core.appender.RollingFileAppender"
},
{
  "name":"org.apache.logging.log4j.core.appender.RollingRandomAccessFileAppender"
},
{
  "name":"org.apache.logging.log4j.core.appender.ScriptAppenderSelector"
},
{
  "name":"org.apache.logging.log4j.core.appender.SmtpAppender"
},
{
  "name":"org.apache.logging.log4j.core.appender.SocketAppender"
},
{
  "name":"org.apache.logging.log4j.core.appender.SyslogAppender"
},
{
  "name":"org.apache.logging.log4j.core.appender.WriterAppender"
},
{
  "name":"org.apache.logging.log4j.core.appender.db.ColumnMapping"
},
{
  "name":"org.apache.logging.log4j.core.appender.db.jdbc.ColumnConfig"
},
{
  "name":"org.apache.logging.log4j.core.appender.db.jdbc.DataSourceConnectionSource"
},
{
  "name":"org.apache.logging.log4j.core.appender.db.jdbc.DriverManagerConnectionSource"
},
{
  "name":"org.apache.logging.log4j.core.appender.db.jdbc.FactoryMethodConnectionSource"
},
{
  "name":"org.apache.logging.log4j.core.appender.db.jdbc.JdbcAppender"
},
{
  "name":"org.apache.logging.log4j.core.appender.mom.JmsAppender"
},
{
  "name":"org.apache.logging.log4j.core.appender.mom.jeromq.JeroMqAppender"
},
{
  "name":"org.apache.logging.log4j.core.appender.mom.kafka.KafkaAppender"
},
{
  "name":"org.apache.logging.log4j.core.appender.nosql.NoSqlAppender"
},
{
  "name":"org.apache.logging.log4j.core.appender.rewrite.LoggerNameLevelRewritePolicy"
},
{
  "name":"org.apache.logging.log4j.core.appender.rewrite.MapRewritePolicy"
},
{
  "name":"org.apache.logging.log4j.core.appender.rewrite.PropertiesRewritePolicy"
},
{
  "name":"org.apache.logging.log4j.core.appender.rewrite.RewriteAppender"
},
{
  "name":"org.apache.logging.log4j.core.appender.rolling.CompositeTriggeringPolicy"
},
{
  "name":"org.apache.logging.log4j.core.appender.rolling.CronTriggeringPolicy"
},
{
  "name":"org.apache.logging.log4j.core.appender.rolling.DefaultRolloverStrategy"
},
{
  "name":"org.apache.logging.log4j.core.appender.rolling.DirectWriteRolloverStrategy"
},
{
  "name":"org.apache.logging.log4j.core.appender.rolling.NoOpTriggeringPolicy"
},
{
  "name":"org.apache.logging.log4j.core.appender.rolling.OnStartupTriggeringPolicy"
},
{
  "name":"org.apache.logging.log4j.core.appender.rolling.SizeBasedTriggeringPolicy"
},
{
  "name":"org.apache.logging.log4j.core.appender.rolling.TimeBasedTriggeringPolicy"
},
{
  "name":"org.apache.logging.log4j.core.appender.rolling.action.DeleteAction"
},
{
  "name":"org.apache.logging.log4j.core.appender.rolling.action.IfAccumulatedFileCount"
},
{
  "name":"org.apache.logging.log4j.core.appender.rolling.action.IfAccumulatedFileSize"
},
{
  "name":"org.apache.logging.log4j.core.appender.rolling.action.IfAll"
},
{
  "name":"org.apache.logging.log4j.core.appender.rolling.action.IfAny"
},
{
  "name":"org.apache.logging.log4j.core.appender.rolling.action.IfFileName"
},
{
  "name":"org.apache.logging.log4j.core.appender.rolling.action.IfLastModified"
},
{
  "name":"org.apache.logging.log4j.core.appender.rolling.action.IfNot"
},
{
  "name":"org.apache.logging.log4j.core.appender.rolling.action.PathSortByModificationTime"
},
{
  "name":"org.apache.logging.log4j.core.appender.rolling.action.PosixViewAttributeAction"
},
{
  "name":"org.apache.logging.log4j.core.appender.rolling.action.ScriptCondition"
},
{
  "name":"org.apache.logging.log4j.core.appender.routing.IdlePurgePolicy"
},
{
  "name":"org.apache.logging.log4j.core.appender.routing.Route"
},
{
  "name":"org.apache.logging.log4j.core.appender.routing.Routes"
},
{
  "name":"org.apache.logging.log4j.core.appender.routing.RoutingAppender"
},
{
  "name":"org.apache.logging.log4j.core.async.ArrayBlockingQueueFactory"
},
{
  "name":"org.apache.logging.log4j.core.async.AsyncLoggerConfig"
},
{
  "name":"org.apache.logging.log4j.core.async.AsyncLoggerConfig$RootLogger"
},
{
  "name":"org.apache.logging.log4j.core.async.DisruptorBlockingQueueFactory"
},
{
  "name":"org.apache.logging.log4j.core.async.JCToolsBlockingQueueFactory"
},
{
  "name":"org.apache.logging.log4j.core.async.LinkedTransferQueueFactory"
},
{
  "name":"org.apache.logging.log4j.core.config.AppenderControlArraySet",
  "fields":[{"name":"appenderArray"}]
},
{
  "name":"org.apache.logging.log4j.core.config.AppenderRef",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"createAppenderRef","parameterTypes":["java.lang.String","org.apache.logging.log4j.Level","org.apache.logging.log4j.core.Filter"] }]
},
{
  "name":"org.apache.logging.log4j.core.config.AppendersPlugin",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"createAppenders","parameterTypes":["org.apache.logging.log4j.core.Appender[]"] }]
},
{
  "name":"org.apache.logging.log4j.core.config.CustomLevelConfig"
},
{
  "name":"org.apache.logging.log4j.core.config.CustomLevels"
},
{
  "name":"org.apache.logging.log4j.core.config.DefaultAdvertiser"
},
{
  "name":"org.apache.logging.log4j.core.config.HttpWatcher"
},
{
  "name":"org.apache.logging.log4j.core.config.LoggerConfig"
},
{
  "name":"org.apache.logging.log4j.core.config.LoggerConfig$RootLogger",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"newRootBuilder","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.config.LoggerConfig$RootLogger$Builder",
  "allDeclaredFields":true
},
{
  "name":"org.apache.logging.log4j.core.config.LoggersPlugin",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"createLoggers","parameterTypes":["org.apache.logging.log4j.core.config.LoggerConfig[]"] }]
},
{
  "name":"org.apache.logging.log4j.core.config.PropertiesPlugin"
},
{
  "name":"org.apache.logging.log4j.core.config.Property"
},
{
  "name":"org.apache.logging.log4j.core.config.ScriptsPlugin"
},
{
  "name":"org.apache.logging.log4j.core.config.arbiters.ClassArbiter"
},
{
  "name":"org.apache.logging.log4j.core.config.arbiters.DefaultArbiter"
},
{
  "name":"org.apache.logging.log4j.core.config.arbiters.ScriptArbiter"
},
{
  "name":"org.apache.logging.log4j.core.config.arbiters.SelectArbiter"
},
{
  "name":"org.apache.logging.log4j.core.config.arbiters.SystemPropertyArbiter"
},
{
  "name":"org.apache.logging.log4j.core.config.json.JsonConfigurationFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$BigDecimalConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$BigIntegerConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$BooleanConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$ByteArrayConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$ByteConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$CharArrayConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$CharacterConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$CharsetConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$ClassConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$CronExpressionConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$DoubleConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$DurationConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$FileConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$FloatConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$InetAddressConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$IntegerConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$LevelConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$LongConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$PathConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$PatternConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$SecurityProviderConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$ShortConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$StringConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$UriConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$UrlConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$UuidConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.config.plugins.validation.validators.RequiredValidator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.config.plugins.visitors.PluginAttributeVisitor",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.config.plugins.visitors.PluginBuilderAttributeVisitor",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.config.plugins.visitors.PluginConfigurationVisitor",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.config.plugins.visitors.PluginElementVisitor",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.config.properties.PropertiesConfiguration",
  "methods":[{"name":"<init>","parameterTypes":["org.apache.logging.log4j.core.LoggerContext","org.apache.logging.log4j.core.config.ConfigurationSource","org.apache.logging.log4j.core.config.builder.api.Component"] }]
},
{
  "name":"org.apache.logging.log4j.core.config.properties.PropertiesConfigurationFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.config.xml.XmlConfigurationFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.config.yaml.YamlConfigurationFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.filter.AbstractFilterable$Builder",
  "allDeclaredFields":true
},
{
  "name":"org.apache.logging.log4j.core.filter.BurstFilter"
},
{
  "name":"org.apache.logging.log4j.core.filter.CompositeFilter"
},
{
  "name":"org.apache.logging.log4j.core.filter.DenyAllFilter"
},
{
  "name":"org.apache.logging.log4j.core.filter.DynamicThresholdFilter"
},
{
  "name":"org.apache.logging.log4j.core.filter.LevelMatchFilter"
},
{
  "name":"org.apache.logging.log4j.core.filter.LevelRangeFilter"
},
{
  "name":"org.apache.logging.log4j.core.filter.MapFilter"
},
{
  "name":"org.apache.logging.log4j.core.filter.MarkerFilter"
},
{
  "name":"org.apache.logging.log4j.core.filter.NoMarkerFilter"
},
{
  "name":"org.apache.logging.log4j.core.filter.RegexFilter"
},
{
  "name":"org.apache.logging.log4j.core.filter.ScriptFilter"
},
{
  "name":"org.apache.logging.log4j.core.filter.StringMatchFilter"
},
{
  "name":"org.apache.logging.log4j.core.filter.StructuredDataFilter"
},
{
  "name":"org.apache.logging.log4j.core.filter.ThreadContextMapFilter"
},
{
  "name":"org.apache.logging.log4j.core.filter.ThresholdFilter"
},
{
  "name":"org.apache.logging.log4j.core.filter.TimeFilter"
},
{
  "name":"org.apache.logging.log4j.core.impl.Log4jContextFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.layout.CsvLogEventLayout"
},
{
  "name":"org.apache.logging.log4j.core.layout.CsvParameterLayout"
},
{
  "name":"org.apache.logging.log4j.core.layout.GelfLayout"
},
{
  "name":"org.apache.logging.log4j.core.layout.HtmlLayout"
},
{
  "name":"org.apache.logging.log4j.core.layout.JsonLayout"
},
{
  "name":"org.apache.logging.log4j.core.layout.LevelPatternSelector"
},
{
  "name":"org.apache.logging.log4j.core.layout.LoggerFields"
},
{
  "name":"org.apache.logging.log4j.core.layout.MarkerPatternSelector"
},
{
  "name":"org.apache.logging.log4j.core.layout.MessageLayout"
},
{
  "name":"org.apache.logging.log4j.core.layout.PatternLayout",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"newBuilder","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.layout.PatternLayout$Builder",
  "allDeclaredFields":true
},
{
  "name":"org.apache.logging.log4j.core.layout.PatternMatch"
},
{
  "name":"org.apache.logging.log4j.core.layout.Rfc5424Layout"
},
{
  "name":"org.apache.logging.log4j.core.layout.ScriptPatternSelector"
},
{
  "name":"org.apache.logging.log4j.core.layout.SerializedLayout"
},
{
  "name":"org.apache.logging.log4j.core.layout.SyslogLayout"
},
{
  "name":"org.apache.logging.log4j.core.layout.XmlLayout"
},
{
  "name":"org.apache.logging.log4j.core.layout.YamlLayout"
},
{
  "name":"org.apache.logging.log4j.core.lookup.ContextMapLookup",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.lookup.DateLookup",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.lookup.EnvironmentLookup",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.lookup.EventLookup",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.lookup.JavaLookup",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.lookup.JmxRuntimeInputArgumentsLookup",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.lookup.JndiLookup"
},
{
  "name":"org.apache.logging.log4j.core.lookup.Log4jLookup",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.lookup.LowerLookup",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.lookup.MainMapLookup",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.lookup.MapLookup",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.lookup.MarkerLookup",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.lookup.ResourceBundleLookup",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.lookup.StructuredDataLookup",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.lookup.SystemPropertiesLookup",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.lookup.UpperLookup",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.core.net.MulticastDnsAdvertiser"
},
{
  "name":"org.apache.logging.log4j.core.net.SocketAddress"
},
{
  "name":"org.apache.logging.log4j.core.net.SocketOptions"
},
{
  "name":"org.apache.logging.log4j.core.net.SocketPerformancePreferences"
},
{
  "name":"org.apache.logging.log4j.core.net.ssl.KeyStoreConfiguration"
},
{
  "name":"org.apache.logging.log4j.core.net.ssl.SslConfiguration"
},
{
  "name":"org.apache.logging.log4j.core.net.ssl.TrustStoreConfiguration"
},
{
  "name":"org.apache.logging.log4j.core.pattern.AbstractStyleNameConverter$Black"
},
{
  "name":"org.apache.logging.log4j.core.pattern.AbstractStyleNameConverter$Blue"
},
{
  "name":"org.apache.logging.log4j.core.pattern.AbstractStyleNameConverter$Cyan"
},
{
  "name":"org.apache.logging.log4j.core.pattern.AbstractStyleNameConverter$Green"
},
{
  "name":"org.apache.logging.log4j.core.pattern.AbstractStyleNameConverter$Magenta"
},
{
  "name":"org.apache.logging.log4j.core.pattern.AbstractStyleNameConverter$Red"
},
{
  "name":"org.apache.logging.log4j.core.pattern.AbstractStyleNameConverter$White"
},
{
  "name":"org.apache.logging.log4j.core.pattern.AbstractStyleNameConverter$Yellow"
},
{
  "name":"org.apache.logging.log4j.core.pattern.ClassNamePatternConverter"
},
{
  "name":"org.apache.logging.log4j.core.pattern.DatePatternConverter",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"newInstance","parameterTypes":["java.lang.String[]"] }]
},
{
  "name":"org.apache.logging.log4j.core.pattern.EncodingPatternConverter"
},
{
  "name":"org.apache.logging.log4j.core.pattern.EndOfBatchPatternConverter"
},
{
  "name":"org.apache.logging.log4j.core.pattern.EqualsIgnoreCaseReplacementConverter"
},
{
  "name":"org.apache.logging.log4j.core.pattern.EqualsReplacementConverter"
},
{
  "name":"org.apache.logging.log4j.core.pattern.ExtendedThrowablePatternConverter"
},
{
  "name":"org.apache.logging.log4j.core.pattern.FileDatePatternConverter"
},
{
  "name":"org.apache.logging.log4j.core.pattern.FileLocationPatternConverter"
},
{
  "name":"org.apache.logging.log4j.core.pattern.FullLocationPatternConverter"
},
{
  "name":"org.apache.logging.log4j.core.pattern.HighlightConverter"
},
{
  "name":"org.apache.logging.log4j.core.pattern.IntegerPatternConverter"
},
{
  "name":"org.apache.logging.log4j.core.pattern.LevelPatternConverter",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"newInstance","parameterTypes":["java.lang.String[]"] }]
},
{
  "name":"org.apache.logging.log4j.core.pattern.LineLocationPatternConverter"
},
{
  "name":"org.apache.logging.log4j.core.pattern.LineSeparatorPatternConverter",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"newInstance","parameterTypes":["java.lang.String[]"] }]
},
{
  "name":"org.apache.logging.log4j.core.pattern.LoggerFqcnPatternConverter"
},
{
  "name":"org.apache.logging.log4j.core.pattern.LoggerPatternConverter",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"newInstance","parameterTypes":["java.lang.String[]"] }]
},
{
  "name":"org.apache.logging.log4j.core.pattern.MapPatternConverter"
},
{
  "name":"org.apache.logging.log4j.core.pattern.MarkerPatternConverter"
},
{
  "name":"org.apache.logging.log4j.core.pattern.MarkerSimpleNamePatternConverter"
},
{
  "name":"org.apache.logging.log4j.core.pattern.MaxLengthConverter"
},
{
  "name":"org.apache.logging.log4j.core.pattern.MdcPatternConverter"
},
{
  "name":"org.apache.logging.log4j.core.pattern.MessagePatternConverter",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"newInstance","parameterTypes":["org.apache.logging.log4j.core.config.Configuration","java.lang.String[]"] }]
},
{
  "name":"org.apache.logging.log4j.core.pattern.MethodLocationPatternConverter"
},
{
  "name":"org.apache.logging.log4j.core.pattern.NanoTimePatternConverter"
},
{
  "name":"org.apache.logging.log4j.core.pattern.NdcPatternConverter"
},
{
  "name":"org.apache.logging.log4j.core.pattern.ProcessIdPatternConverter"
},
{
  "name":"org.apache.logging.log4j.core.pattern.RegexReplacement"
},
{
  "name":"org.apache.logging.log4j.core.pattern.RegexReplacementConverter"
},
{
  "name":"org.apache.logging.log4j.core.pattern.RelativeTimePatternConverter"
},
{
  "name":"org.apache.logging.log4j.core.pattern.RepeatPatternConverter"
},
{
  "name":"org.apache.logging.log4j.core.pattern.RootThrowablePatternConverter"
},
{
  "name":"org.apache.logging.log4j.core.pattern.SequenceNumberPatternConverter"
},
{
  "name":"org.apache.logging.log4j.core.pattern.StyleConverter"
},
{
  "name":"org.apache.logging.log4j.core.pattern.ThreadIdPatternConverter"
},
{
  "name":"org.apache.logging.log4j.core.pattern.ThreadNamePatternConverter",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"newInstance","parameterTypes":["java.lang.String[]"] }]
},
{
  "name":"org.apache.logging.log4j.core.pattern.ThreadPriorityPatternConverter"
},
{
  "name":"org.apache.logging.log4j.core.pattern.ThrowablePatternConverter"
},
{
  "name":"org.apache.logging.log4j.core.pattern.UuidPatternConverter"
},
{
  "name":"org.apache.logging.log4j.core.pattern.VariablesNotEmptyReplacementConverter"
},
{
  "name":"org.apache.logging.log4j.core.script.Script"
},
{
  "name":"org.apache.logging.log4j.core.script.ScriptFile"
},
{
  "name":"org.apache.logging.log4j.core.script.ScriptRef"
},
{
  "name":"org.apache.logging.log4j.core.util.KeyValuePair"
},
{
  "name":"org.apache.logging.log4j.message.DefaultFlowMessageFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.message.ParameterizedMessageFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.util.internal.DefaultObjectInputFilter"
},
{
  "name":"org.apache.velocity.runtime.DeprecatedRuntimeConstants",
  "allDeclaredFields":true
},
{
  "name":"org.apache.velocity.runtime.ParserPoolImpl",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.velocity.runtime.RuntimeConstants",
  "fields":[{"name":"CHECK_EMPTY_OBJECTS"}, {"name":"CONTEXT_AUTOREFERENCE_KEY"}, {"name":"CONVERSION_HANDLER_CLASS"}, {"name":"CUSTOM_DIRECTIVES"}, {"name":"DEFINE_DIRECTIVE_MAXDEPTH"}, {"name":"DS_RESOURCE_LOADER_DATASOURCE"}, {"name":"DS_RESOURCE_LOADER_KEY_COLUMN"}, {"name":"DS_RESOURCE_LOADER_TEMPLATE_COLUMN"}, {"name":"DS_RESOURCE_LOADER_TIMESTAMP_COLUMN"}, {"name":"ERRORMSG_END"}, {"name":"ERRORMSG_START"}, {"name":"EVENTHANDLER_INCLUDE"}, {"name":"EVENTHANDLER_INVALIDREFERENCES"}, {"name":"EVENTHANDLER_METHODEXCEPTION"}, {"name":"EVENTHANDLER_REFERENCEINSERTION"}, {"name":"FILE_RESOURCE_LOADER_CACHE"}, {"name":"FILE_RESOURCE_LOADER_PATH"}, {"name":"INPUT_ENCODING"}, {"name":"INTERPOLATE_STRINGLITERALS"}, {"name":"MAX_NUMBER_LOOPS"}, {"name":"PARSE_DIRECTIVE_MAXDEPTH"}, {"name":"RESOURCE_LOADERS"}, {"name":"RESOURCE_LOADER_CHECK_INTERVAL"}, {"name":"RESOURCE_MANAGER_DEFAULTCACHE_SIZE"}, {"name":"RESOURCE_MANAGER_LOGWHENFOUND"}, {"name":"RUNTIME_LOG_REFERENCE_LOG_INVALID"}, {"name":"RUNTIME_REFERENCES_STRICT"}, {"name":"RUNTIME_REFERENCES_STRICT_ESCAPE"}, {"name":"SKIP_INVALID_ITERATOR"}, {"name":"SPACE_GOBBLING"}, {"name":"STRICT_MATH"}, {"name":"UBERSPECT_CLASSNAME"}, {"name":"VM_BODY_REFERENCE"}, {"name":"VM_ENABLE_BC_MODE"}, {"name":"VM_LIBRARY"}, {"name":"VM_LIBRARY_DEFAULT"}, {"name":"VM_MAX_DEPTH"}, {"name":"VM_PERM_ALLOW_INLINE"}, {"name":"VM_PERM_ALLOW_INLINE_REPLACE_GLOBAL"}, {"name":"VM_PERM_INLINE_LOCAL"}]
},
{
  "name":"org.apache.velocity.runtime.directive.Break",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.velocity.runtime.directive.Define",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.velocity.runtime.directive.Evaluate",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.velocity.runtime.directive.Foreach",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.velocity.runtime.directive.ForeachScope",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getCount","parameterTypes":[] }, {"name":"getHasNext","parameterTypes":[] }]
},
{
  "name":"org.apache.velocity.runtime.directive.Include",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.velocity.runtime.directive.Macro",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.velocity.runtime.directive.Parse",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.velocity.runtime.directive.Scope",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.apache.velocity.runtime.directive.Stop",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.velocity.runtime.parser.StandardParser",
  "methods":[{"name":"<init>","parameterTypes":["org.apache.velocity.runtime.RuntimeServices"] }, {"name":"trace_call","parameterTypes":["java.lang.String"] }]
},
{
  "name":"org.apache.velocity.runtime.resource.ResourceCacheImpl",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.velocity.runtime.resource.ResourceManagerImpl",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.velocity.runtime.resource.loader.FileResourceLoader",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.velocity.util.introspection.TypeConversionHandlerImpl",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.velocity.util.introspection.UberspectImpl",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.eclipse.rdf4j.query.algebra.evaluation.impl.QueryEvaluationContext$Minimal",
  "fields":[{"name":"now"}]
},
{
  "name":"org.eclipse.rdf4j.sail.helpers.AbstractSailConnection",
  "fields":[{"name":"isOpen"}]
},
{
  "name":"org.eclipse.rdf4j.sail.memory.MemorySailStore$SnapshotMonitor$ReservedSnapshot",
  "fields":[{"name":"snapshot"}]
},
{
  "name":"org.eclipse.rdf4j.sail.memory.model.MemStatement",
  "fields":[{"name":"tillSnapshot"}]
},
{
  "name":"org.eclipse.rdf4j.sail.memory.model.MemStatementList",
  "fields":[{"name":"guaranteedLastIndexInUse"}, {"name":"previouslyInsertedIndex"}, {"name":"prioritiseCleanup"}, {"name":"size"}, {"name":"statements"}]
},
{
  "name":"org.eclipse.rdf4j.sail.memory.model.WeakObjectRegistry$AdderBasedReadWriteLock",
  "fields":[{"name":"writeLocked"}]
},
{
  "name":"org.slf4j.ext.EventData"
},
{
  "name":"sun.management.ClassLoadingImpl",
  "queryAllPublicConstructors":true
},
{
  "name":"sun.management.CompilationImpl",
  "queryAllPublicConstructors":true
},
{
  "name":"sun.management.ManagementFactoryHelper$1",
  "queryAllPublicConstructors":true
},
{
  "name":"sun.management.ManagementFactoryHelper$PlatformLoggingImpl",
  "queryAllPublicConstructors":true
},
{
  "name":"sun.management.MemoryImpl",
  "queryAllPublicConstructors":true
},
{
  "name":"sun.management.MemoryManagerImpl",
  "queryAllPublicConstructors":true
},
{
  "name":"sun.management.MemoryPoolImpl",
  "queryAllPublicConstructors":true
},
{
  "name":"sun.management.RuntimeImpl",
  "queryAllPublicConstructors":true
},
{
  "name":"sun.misc.Unsafe",
  "fields":[{"name":"theUnsafe"}],
  "methods":[{"name":"copyMemory","parameterTypes":["java.lang.Object","long","java.lang.Object","long","long"] }, {"name":"getAndAddLong","parameterTypes":["java.lang.Object","long","long"] }, {"name":"getAndSetObject","parameterTypes":["java.lang.Object","long","java.lang.Object"] }, {"name":"invokeCleaner","parameterTypes":["java.nio.ByteBuffer"] }, {"name":"storeFence","parameterTypes":[] }]
},
{
  "name":"sun.misc.VM"
},
{
  "name":"sun.nio.ch.SelectorImpl",
  "fields":[{"name":"publicSelectedKeys"}, {"name":"selectedKeys"}]
},
{
  "name":"sun.reflect.Reflection"
},
{
  "name":"sun.security.provider.MD5",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.NativePRNG",
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"<init>","parameterTypes":["java.security.SecureRandomParameters"] }]
},
{
  "name":"sun.security.provider.SHA",
  "methods":[{"name":"<init>","parameterTypes":[] }]
}
]
